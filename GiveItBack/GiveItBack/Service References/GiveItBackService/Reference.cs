//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace GiveItBack.GiveItBackService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembersModel", Namespace="http://schemas.datacontract.org/2004/07/GiveItBackService")]
    public partial class MembersModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        private long PhoneNumberField;
        
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FundRaisingModel", Namespace="http://schemas.datacontract.org/2004/07/GiveItBackService")]
    public partial class FundRaisingModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateDateField;
        
        private int CreatorIDField;
        
        private string GPSCoordField;
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatorID {
            get {
                return this.CreatorIDField;
            }
            set {
                if ((this.CreatorIDField.Equals(value) != true)) {
                    this.CreatorIDField = value;
                    this.RaisePropertyChanged("CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSCoord {
            get {
                return this.GPSCoordField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSCoordField, value) != true)) {
                    this.GPSCoordField = value;
                    this.RaisePropertyChanged("GPSCoord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContributionModel", Namespace="http://schemas.datacontract.org/2004/07/GiveItBackService")]
    public partial class ContributionModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double ContributionValueField;
        
        private int FundRasingIDField;
        
        private int IDField;
        
        private int MemberIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ContributionValue {
            get {
                return this.ContributionValueField;
            }
            set {
                if ((this.ContributionValueField.Equals(value) != true)) {
                    this.ContributionValueField = value;
                    this.RaisePropertyChanged("ContributionValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FundRasingID {
            get {
                return this.FundRasingIDField;
            }
            set {
                if ((this.FundRasingIDField.Equals(value) != true)) {
                    this.FundRasingIDField = value;
                    this.RaisePropertyChanged("FundRasingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberID {
            get {
                return this.MemberIDField;
            }
            set {
                if ((this.MemberIDField.Equals(value) != true)) {
                    this.MemberIDField = value;
                    this.RaisePropertyChanged("MemberID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GiveItBackService.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMainService/DoWork", ReplyAction="http://tempuri.org/IMainService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMainService/InsertMember", ReplyAction="http://tempuri.org/IMainService/InsertMemberResponse")]
        System.IAsyncResult BeginInsertMember(GiveItBack.GiveItBackService.MembersModel member, System.AsyncCallback callback, object asyncState);
        
        GiveItBack.GiveItBackService.MembersModel EndInsertMember(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMainService/InsertFundRaising", ReplyAction="http://tempuri.org/IMainService/InsertFundRaisingResponse")]
        System.IAsyncResult BeginInsertFundRaising(GiveItBack.GiveItBackService.FundRaisingModel fundRaising, System.AsyncCallback callback, object asyncState);
        
        GiveItBack.GiveItBackService.FundRaisingModel EndInsertFundRaising(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMainService/InsertContribution", ReplyAction="http://tempuri.org/IMainService/InsertContributionResponse")]
        System.IAsyncResult BeginInsertContribution(GiveItBack.GiveItBackService.ContributionModel contribution, System.AsyncCallback callback, object asyncState);
        
        GiveItBack.GiveItBackService.ContributionModel EndInsertContribution(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMainService/GetMembers", ReplyAction="http://tempuri.org/IMainService/GetMembersResponse")]
        System.IAsyncResult BeginGetMembers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel> EndGetMembers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : GiveItBack.GiveItBackService.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GiveItBack.GiveItBackService.MembersModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GiveItBack.GiveItBackService.MembersModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertFundRaisingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertFundRaisingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GiveItBack.GiveItBackService.FundRaisingModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GiveItBack.GiveItBackService.FundRaisingModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertContributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertContributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GiveItBack.GiveItBackService.ContributionModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GiveItBack.GiveItBackService.ContributionModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<GiveItBack.GiveItBackService.IMainService>, GiveItBack.GiveItBackService.IMainService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMemberDelegate;
        
        private EndOperationDelegate onEndInsertMemberDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMemberCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertFundRaisingDelegate;
        
        private EndOperationDelegate onEndInsertFundRaisingDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFundRaisingCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertContributionDelegate;
        
        private EndOperationDelegate onEndInsertContributionDelegate;
        
        private System.Threading.SendOrPostCallback onInsertContributionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersDelegate;
        
        private EndOperationDelegate onEndGetMembersDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<InsertMemberCompletedEventArgs> InsertMemberCompleted;
        
        public event System.EventHandler<InsertFundRaisingCompletedEventArgs> InsertFundRaisingCompleted;
        
        public event System.EventHandler<InsertContributionCompletedEventArgs> InsertContributionCompleted;
        
        public event System.EventHandler<GetMembersCompletedEventArgs> GetMembersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GiveItBack.GiveItBackService.IMainService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void GiveItBack.GiveItBackService.IMainService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GiveItBack.GiveItBackService.IMainService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((GiveItBack.GiveItBackService.IMainService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GiveItBack.GiveItBackService.IMainService.BeginInsertMember(GiveItBack.GiveItBackService.MembersModel member, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMember(member, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GiveItBack.GiveItBackService.MembersModel GiveItBack.GiveItBackService.IMainService.EndInsertMember(System.IAsyncResult result) {
            return base.Channel.EndInsertMember(result);
        }
        
        private System.IAsyncResult OnBeginInsertMember(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GiveItBack.GiveItBackService.MembersModel member = ((GiveItBack.GiveItBackService.MembersModel)(inValues[0]));
            return ((GiveItBack.GiveItBackService.IMainService)(this)).BeginInsertMember(member, callback, asyncState);
        }
        
        private object[] OnEndInsertMember(System.IAsyncResult result) {
            GiveItBack.GiveItBackService.MembersModel retVal = ((GiveItBack.GiveItBackService.IMainService)(this)).EndInsertMember(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertMemberCompleted(object state) {
            if ((this.InsertMemberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMemberCompleted(this, new InsertMemberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMemberAsync(GiveItBack.GiveItBackService.MembersModel member) {
            this.InsertMemberAsync(member, null);
        }
        
        public void InsertMemberAsync(GiveItBack.GiveItBackService.MembersModel member, object userState) {
            if ((this.onBeginInsertMemberDelegate == null)) {
                this.onBeginInsertMemberDelegate = new BeginOperationDelegate(this.OnBeginInsertMember);
            }
            if ((this.onEndInsertMemberDelegate == null)) {
                this.onEndInsertMemberDelegate = new EndOperationDelegate(this.OnEndInsertMember);
            }
            if ((this.onInsertMemberCompletedDelegate == null)) {
                this.onInsertMemberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMemberCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMemberDelegate, new object[] {
                        member}, this.onEndInsertMemberDelegate, this.onInsertMemberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GiveItBack.GiveItBackService.IMainService.BeginInsertFundRaising(GiveItBack.GiveItBackService.FundRaisingModel fundRaising, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFundRaising(fundRaising, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GiveItBack.GiveItBackService.FundRaisingModel GiveItBack.GiveItBackService.IMainService.EndInsertFundRaising(System.IAsyncResult result) {
            return base.Channel.EndInsertFundRaising(result);
        }
        
        private System.IAsyncResult OnBeginInsertFundRaising(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GiveItBack.GiveItBackService.FundRaisingModel fundRaising = ((GiveItBack.GiveItBackService.FundRaisingModel)(inValues[0]));
            return ((GiveItBack.GiveItBackService.IMainService)(this)).BeginInsertFundRaising(fundRaising, callback, asyncState);
        }
        
        private object[] OnEndInsertFundRaising(System.IAsyncResult result) {
            GiveItBack.GiveItBackService.FundRaisingModel retVal = ((GiveItBack.GiveItBackService.IMainService)(this)).EndInsertFundRaising(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertFundRaisingCompleted(object state) {
            if ((this.InsertFundRaisingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFundRaisingCompleted(this, new InsertFundRaisingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFundRaisingAsync(GiveItBack.GiveItBackService.FundRaisingModel fundRaising) {
            this.InsertFundRaisingAsync(fundRaising, null);
        }
        
        public void InsertFundRaisingAsync(GiveItBack.GiveItBackService.FundRaisingModel fundRaising, object userState) {
            if ((this.onBeginInsertFundRaisingDelegate == null)) {
                this.onBeginInsertFundRaisingDelegate = new BeginOperationDelegate(this.OnBeginInsertFundRaising);
            }
            if ((this.onEndInsertFundRaisingDelegate == null)) {
                this.onEndInsertFundRaisingDelegate = new EndOperationDelegate(this.OnEndInsertFundRaising);
            }
            if ((this.onInsertFundRaisingCompletedDelegate == null)) {
                this.onInsertFundRaisingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFundRaisingCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFundRaisingDelegate, new object[] {
                        fundRaising}, this.onEndInsertFundRaisingDelegate, this.onInsertFundRaisingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GiveItBack.GiveItBackService.IMainService.BeginInsertContribution(GiveItBack.GiveItBackService.ContributionModel contribution, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertContribution(contribution, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GiveItBack.GiveItBackService.ContributionModel GiveItBack.GiveItBackService.IMainService.EndInsertContribution(System.IAsyncResult result) {
            return base.Channel.EndInsertContribution(result);
        }
        
        private System.IAsyncResult OnBeginInsertContribution(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GiveItBack.GiveItBackService.ContributionModel contribution = ((GiveItBack.GiveItBackService.ContributionModel)(inValues[0]));
            return ((GiveItBack.GiveItBackService.IMainService)(this)).BeginInsertContribution(contribution, callback, asyncState);
        }
        
        private object[] OnEndInsertContribution(System.IAsyncResult result) {
            GiveItBack.GiveItBackService.ContributionModel retVal = ((GiveItBack.GiveItBackService.IMainService)(this)).EndInsertContribution(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertContributionCompleted(object state) {
            if ((this.InsertContributionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertContributionCompleted(this, new InsertContributionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertContributionAsync(GiveItBack.GiveItBackService.ContributionModel contribution) {
            this.InsertContributionAsync(contribution, null);
        }
        
        public void InsertContributionAsync(GiveItBack.GiveItBackService.ContributionModel contribution, object userState) {
            if ((this.onBeginInsertContributionDelegate == null)) {
                this.onBeginInsertContributionDelegate = new BeginOperationDelegate(this.OnBeginInsertContribution);
            }
            if ((this.onEndInsertContributionDelegate == null)) {
                this.onEndInsertContributionDelegate = new EndOperationDelegate(this.OnEndInsertContribution);
            }
            if ((this.onInsertContributionCompletedDelegate == null)) {
                this.onInsertContributionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertContributionCompleted);
            }
            base.InvokeAsync(this.onBeginInsertContributionDelegate, new object[] {
                        contribution}, this.onEndInsertContributionDelegate, this.onInsertContributionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GiveItBack.GiveItBackService.IMainService.BeginGetMembers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel> GiveItBack.GiveItBackService.IMainService.EndGetMembers(System.IAsyncResult result) {
            return base.Channel.EndGetMembers(result);
        }
        
        private System.IAsyncResult OnBeginGetMembers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((GiveItBack.GiveItBackService.IMainService)(this)).BeginGetMembers(callback, asyncState);
        }
        
        private object[] OnEndGetMembers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel> retVal = ((GiveItBack.GiveItBackService.IMainService)(this)).EndGetMembers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersCompleted(object state) {
            if ((this.GetMembersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersCompleted(this, new GetMembersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersAsync() {
            this.GetMembersAsync(null);
        }
        
        public void GetMembersAsync(object userState) {
            if ((this.onBeginGetMembersDelegate == null)) {
                this.onBeginGetMembersDelegate = new BeginOperationDelegate(this.OnBeginGetMembers);
            }
            if ((this.onEndGetMembersDelegate == null)) {
                this.onEndGetMembersDelegate = new EndOperationDelegate(this.OnEndGetMembers);
            }
            if ((this.onGetMembersCompletedDelegate == null)) {
                this.onGetMembersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersDelegate, null, this.onEndGetMembersDelegate, this.onGetMembersCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GiveItBack.GiveItBackService.IMainService CreateChannel() {
            return new MainServiceClientChannel(this);
        }
        
        private class MainServiceClientChannel : ChannelBase<GiveItBack.GiveItBackService.IMainService>, GiveItBack.GiveItBackService.IMainService {
            
            public MainServiceClientChannel(System.ServiceModel.ClientBase<GiveItBack.GiveItBackService.IMainService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginInsertMember(GiveItBack.GiveItBackService.MembersModel member, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = member;
                System.IAsyncResult _result = base.BeginInvoke("InsertMember", _args, callback, asyncState);
                return _result;
            }
            
            public GiveItBack.GiveItBackService.MembersModel EndInsertMember(System.IAsyncResult result) {
                object[] _args = new object[0];
                GiveItBack.GiveItBackService.MembersModel _result = ((GiveItBack.GiveItBackService.MembersModel)(base.EndInvoke("InsertMember", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertFundRaising(GiveItBack.GiveItBackService.FundRaisingModel fundRaising, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fundRaising;
                System.IAsyncResult _result = base.BeginInvoke("InsertFundRaising", _args, callback, asyncState);
                return _result;
            }
            
            public GiveItBack.GiveItBackService.FundRaisingModel EndInsertFundRaising(System.IAsyncResult result) {
                object[] _args = new object[0];
                GiveItBack.GiveItBackService.FundRaisingModel _result = ((GiveItBack.GiveItBackService.FundRaisingModel)(base.EndInvoke("InsertFundRaising", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertContribution(GiveItBack.GiveItBackService.ContributionModel contribution, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contribution;
                System.IAsyncResult _result = base.BeginInvoke("InsertContribution", _args, callback, asyncState);
                return _result;
            }
            
            public GiveItBack.GiveItBackService.ContributionModel EndInsertContribution(System.IAsyncResult result) {
                object[] _args = new object[0];
                GiveItBack.GiveItBackService.ContributionModel _result = ((GiveItBack.GiveItBackService.ContributionModel)(base.EndInvoke("InsertContribution", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMembers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel> EndGetMembers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel> _result = ((System.Collections.ObjectModel.ObservableCollection<GiveItBack.GiveItBackService.MembersModel>)(base.EndInvoke("GetMembers", _args, result)));
                return _result;
            }
        }
    }
}
